service: linkManagement


custom:
  pythonRequirements:
    dockerizePip: true
    useDownloadCache: false
    useStaticCache: false

provider:
  name: aws
  runtime: python3.8
  timeout: 15
  stage: v2
  endpointType: REGIONAL
  iamRoleStatements:
      - Effect: Allow
        Action: 
          - "dynamodb:scan"
          - "dynamodb:PutItem"
          - "dynamodb:GetItem"
        Resource: arn:aws:dynamodb:us-east-1:612185335394:table/linkStorage
      - Effect: Allow
        Action:
          - "s3:GetObject"
          - "s3:HeadObject"
          - "s3:PutObject"
          - "s3:ListObjects"
          - "s3:PutObjectAcl"
        Resource: arn:aws:s3:::basementremodeling-archive-12345/products/*
      - Effect: Allow
        Action:
          - "s3:ListBucket"
        Resource: arn:aws:s3:::basementremodeling-archive-12345
functions:

  shorten_link:
    handler: shortener/shorten.handler
    events:
      - http: 
          path: /links/shorten
          method: post
          authorizer:
            arn: arn:aws:lambda:us-east-1:612185335394:function:utilities-dev-authorizer
    environment:
      CLIENT_URL_ROOT: https://form.basementremodeling.com
      INTERNAL_URL_ROOT: https://int.basementremodeling.com
    
  lenghten_link:
    handler: shortener/lengthen.handler
    events:
      - http: 
          path: /{link}
          method: any

  thankyou:
    handler: shortener/thankyou.main
    events:
      - http: 
          path: /user/thank-you
          method: get

  make_qr_code:
    handler: qrcodes/add_product.handler
    events:
      - http: 
          path: /products/add
          method: post
    environment:
      BUCKET: basementremodeling-archive-12345

  qr_code_link:
    handler: qrcodes/fetch_product.handler
    events:
      - http: 
          path: /products/get/{code}
          method: get

plugins:
  - serverless-python-requirements
  - serverless-offline